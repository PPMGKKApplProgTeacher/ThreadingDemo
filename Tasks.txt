Задача: Използване на Task за асинхронно изпълнение

Описание: Създайте програма, която стартира асинхронно изпълнение на метод с помощта на Task. Методът трябва да изчислява сумата на числата от 1 до 100 и да я извежда на конзолата.

Задача: Паралелно изчисление на факториел

Описание: Използвайте класа Task, за да изчислите факториелите на числата от 1 до 5 в паралелни задачи и да ги отпечатате.

Задача: Използване на Thread за симулация на многозадачност

Описание: Създайте програма, която използва два различни потока (Thread), за да симулира паралелно изпълнение на две различни задачи (печат на букви и числа).

Задача: Забавяне и изпълнение на метод с Task

Описание: Създайте програма, която стартира асинхронно задача с помощта на Task, която изпълнява метод, забавен с 3 секунди, след което отпечатва съобщение.

Задача: Асинхронно зареждане на данни

Описание: Използвайте клас Task, за да симулирате зареждането на данни от база данни (например като изчакване 2 секунди), след което отпечатайте съобщение за успешното зареждане.

Задача: Изпълнение на задачи с Task.WhenAny

Описание: Създайте програма, която стартира три задачи с помощта на Task. Първата задача изчаква 2 секунди, втората 4 секунди и третата 6 секунди. Използвайте Task.WhenAny, за да изведете съобщение за задачата, която завършва първа.

Задача: Приложение за синхронизация на нишки

Описание: Създайте програма, която използва два потока (Thread), които едновременно увеличават стойността на променлива counter със стойност 1 за всеки поток, 1000 пъти. Използвайте lock, за да синхронизирате достъпа до променливата и да предотвратите възможни грешки.

Задача: Асинхронно извеждане на елементи от списък

Описание: Създайте програма, която използва Task за асинхронно извеждане на елементите на списък от цели числа, като всяко число се извежда със забавяне от 1 секунда.

Задача: Многозадачност с Task и събиране на резултати

Описание: Използвайте Task, за да изчислите квадратите на числата от 1 до 5 асинхронно. Съберете резултатите в масив и ги отпечатайте след като всички задачи са завършени.

Задача: Два потока с различно забавяне и синхронизация

Описание: Създайте програма, която използва два потока. Първият поток трябва да изчаква 3 секунди, а вторият 5 секунди. След като и двата потока приключат, отпечатайте съобщение на конзолата. Използвайте ManualResetEvent за синхронизация.

Задача: Асинхронно изчисляване на произведение

Описание: Напишете програма, която използва Task за асинхронно изчисляване на произведението на числата от 1 до 10 и отпечатване на резултата.


Задача: Асинхронно зареждане на различни ресурси

Описание: Създайте програма, която използва три различни асинхронни задачи, които симулират зареждане на различни ресурси (например, файл, база данни и мрежова заявка). Използвайте Task.WhenAll, за да изчакате завършването на всички задачи и след това отпечатайте съобщение за успешното зареждане на всички ресурси.

Задача: Програма с множество нишки и динамично разпределение на задачи

Описание: Създайте програма, която създава 5 потока, които изпълняват различни задачи. Всеки поток трябва да изчислява сумата на числата от 1 до 100 за даден диапазон, предоставен на всеки поток (например, поток 1 обработва числата от 1 до 20, поток 2 от 21 до 40 и т.н.). След завършването на задачите отпечатайте общата сума.
